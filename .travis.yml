
notifications:
  email: false
  slack:
    rooms:
        - christopherjbischoff:pfGkxBzlRL76WzPenVJMjwzm#alerts
    on_success: change # default: always
    on_failure: always # default: always
    template:
      - "Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>) for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`."
      - "Execution time: *%{duration}*"
      - "Message: %{message}"

language: go

go:
  - 1.12

branches:
  only:
  - master

env:
  global:
  - AWS_DEFAULT_REGION=us-west-2
  - AWS_S3_BUCKET=io.sliplab.lambdadeployment.uw2

before_install:
  # execute all of the commands which need to be executed
  # before installing dependencies
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - curl -L -s https://github.com/golang/dep/releases/download/v0.5.1/dep-linux-amd64 -o $GOPATH/bin/dep
  - chmod +x $GOPATH/bin/dep

install:
  # install all of the dependencies you need here
  - $GOPATH/bin/dep init
  - $GOPATH/bin/dep ensure
  - go get golang.org/x/lint/golint
  - go get github.com/haya14busa/goverage
  - go get github.com/mattn/goveralls

before_script:
  # execute all of the commands which need to be executed
  # before running actual tests
  - PKGS=$(go list ./...)
  - LINT_PKGS=$(go list ./... | grep -Ev 'aws-lambda-go/lambda')
  - go get -t -d -v ./...

jobs:
  include:
    - stage: format
      script: ./format.sh
    - stage: test
      script:
        - go get -t ./...
        - golint -set_exit_status
        - go vet .
        - go test .
        - go test ./... -race -coverprofile=coverage.txt -covermode=atomic
    - stage: build
      script:
        - export commitID=`git rev-parse HEAD`
        - export TRAVIS_REPO_NAME=${TRAVIS_REPO_SLUG#*/}
        - echo $TRAVIS_REPO_NAME
        - GOOS=linux GOARCH=amd64 go build -o main lambda_golang_fibonacci.go
        - zip ${commitID}.zip main
    - stage: push
      script:
        - export commitID=`git rev-parse HEAD`
        - export TRAVIS_REPO_OWNER=${TRAVIS_REPO_SLUG%/*}
        - export FUNCTION_NAME=${TRAVIS_REPO_SLUG#*/}
        - echo $commitID
        - echo $TRAVIS_REPO_OWNER
        - echo $FUNCTION_NAME
        #aws s3 cp ${commitID()}.zip s3://${AWS_S3_BUCKET}
    - stage: deploy
      script:
        - export commitID=`git rev-parse HEAD`
        - export TRAVIS_REPO_OWNER=${TRAVIS_REPO_SLUG%/*}
        - export FUNCTION_NAME=${TRAVIS_REPO_SLUG#*/}
        - echo $commitID
        - echo $TRAVIS_REPO_OWNER
        - echo $FUNCTION_NAME
        #aws lambda update-function-code --function-name ${TRAVIS_REPO_NAME} \
        #        --s3-bucket ${AWS_S3_BUCKET} \
        #        --s3-key ${commitID()}.zip \
        #        --region ${AWS_DEFAULT_REGION}
